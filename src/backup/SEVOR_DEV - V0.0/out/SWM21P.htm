<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\out\SWM21P.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\out\SWM21P.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 76]: Last Updated: Tue Jan 09 10:13:34 2024
<BR><P>
<H3>Maximum Stack Usage =        132 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
SysTick_Handler &rArr; foc_if_loop &rArr; foc_init &rArr; foc_svm_gen &rArr; __aeabi_uidivmod
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[6]">UART0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">UART0_Handler</a><BR>
 <LI><a href="#[8]">CORDIC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">CORDIC_Handler</a><BR>
 <LI><a href="#[9]">UART1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">UART1_Handler</a><BR>
 <LI><a href="#[a]">PWM1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">PWM1_Handler</a><BR>
 <LI><a href="#[c]">HALL_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">HALL_Handler</a><BR>
 <LI><a href="#[f]">PWMBRK_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">PWMBRK_Handler</a><BR>
 <LI><a href="#[10]">WDT_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">WDT_Handler</a><BR>
 <LI><a href="#[11]">I2C0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">I2C0_Handler</a><BR>
 <LI><a href="#[12]">XTALSTOP_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">XTALSTOP_Handler</a><BR>
 <LI><a href="#[15]">BTIMR0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">BTIMR0_Handler</a><BR>
 <LI><a href="#[16]">BTIMR1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">BTIMR1_Handler</a><BR>
 <LI><a href="#[18]">BTIMR3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18]">BTIMR3_Handler</a><BR>
 <LI><a href="#[19]">GPIOA_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[19]">GPIOA_Handler</a><BR>
 <LI><a href="#[1a]">GPIOB_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a]">GPIOB_Handler</a><BR>
 <LI><a href="#[1b]">GPIOM_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">GPIOM_Handler</a><BR>
 <LI><a href="#[1c]">GPIOA0_GPIOM0_SPI1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">GPIOA0_GPIOM0_SPI1_Handler</a><BR>
 <LI><a href="#[1d]">GPIOA1_GPIOM1_MPU_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">GPIOA1_GPIOM1_MPU_Handler</a><BR>
 <LI><a href="#[1e]">GPIOA2_GPIOM2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">GPIOA2_GPIOM2_Handler</a><BR>
 <LI><a href="#[1f]">GPIOA3_GPIOM3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">GPIOA3_GPIOM3_Handler</a><BR>
 <LI><a href="#[20]">GPIOB0_GPIOA8_TIMR2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">GPIOB0_GPIOA8_TIMR2_Handler</a><BR>
 <LI><a href="#[21]">GPIOB1_GPIOA9_DMA_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">GPIOB1_GPIOA9_DMA_Handler</a><BR>
 <LI><a href="#[22]">GPIOB2_GPIOA10_CAN0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22]">GPIOB2_GPIOA10_CAN0_Handler</a><BR>
 <LI><a href="#[23]">GPIOB3_GPIOA11_SPI0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23]">GPIOB3_GPIOA11_SPI0_Handler</a><BR>
 <LI><a href="#[24]">GPIOB4_GPIOB10_QEI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">GPIOB4_GPIOB10_QEI_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[14]">ACMP_Handler</a> from interrupt.o(i.ACMP_Handler) referenced from startup_swm211.o(RESET)
 <LI><a href="#[13]">ADC0_Handler</a> from interrupt.o(PlaceInRAM) referenced from startup_swm211.o(RESET)
 <LI><a href="#[e]">BOD_Handler</a> from interrupt.o(i.BOD_Handler) referenced from startup_swm211.o(RESET)
 <LI><a href="#[15]">BTIMR0_Handler</a> from startup_swm211.o(RESET) referenced from startup_swm211.o(RESET)
 <LI><a href="#[16]">BTIMR1_Handler</a> from startup_swm211.o(RESET) referenced from startup_swm211.o(RESET)
 <LI><a href="#[17]">BTIMR2_Handler</a> from interrupt.o(i.BTIMR2_Handler) referenced from startup_swm211.o(RESET)
 <LI><a href="#[18]">BTIMR3_Handler</a> from startup_swm211.o(RESET) referenced from startup_swm211.o(RESET)
 <LI><a href="#[8]">CORDIC_Handler</a> from startup_swm211.o(RESET) referenced from startup_swm211.o(RESET)
 <LI><a href="#[1c]">GPIOA0_GPIOM0_SPI1_Handler</a> from startup_swm211.o(RESET) referenced from startup_swm211.o(RESET)
 <LI><a href="#[1d]">GPIOA1_GPIOM1_MPU_Handler</a> from startup_swm211.o(RESET) referenced from startup_swm211.o(RESET)
 <LI><a href="#[1e]">GPIOA2_GPIOM2_Handler</a> from startup_swm211.o(RESET) referenced from startup_swm211.o(RESET)
 <LI><a href="#[1f]">GPIOA3_GPIOM3_Handler</a> from startup_swm211.o(RESET) referenced from startup_swm211.o(RESET)
 <LI><a href="#[19]">GPIOA_Handler</a> from startup_swm211.o(RESET) referenced from startup_swm211.o(RESET)
 <LI><a href="#[20]">GPIOB0_GPIOA8_TIMR2_Handler</a> from startup_swm211.o(RESET) referenced from startup_swm211.o(RESET)
 <LI><a href="#[21]">GPIOB1_GPIOA9_DMA_Handler</a> from startup_swm211.o(RESET) referenced from startup_swm211.o(RESET)
 <LI><a href="#[22]">GPIOB2_GPIOA10_CAN0_Handler</a> from startup_swm211.o(RESET) referenced from startup_swm211.o(RESET)
 <LI><a href="#[23]">GPIOB3_GPIOA11_SPI0_Handler</a> from startup_swm211.o(RESET) referenced from startup_swm211.o(RESET)
 <LI><a href="#[24]">GPIOB4_GPIOB10_QEI_Handler</a> from startup_swm211.o(RESET) referenced from startup_swm211.o(RESET)
 <LI><a href="#[1a]">GPIOB_Handler</a> from startup_swm211.o(RESET) referenced from startup_swm211.o(RESET)
 <LI><a href="#[1b]">GPIOM_Handler</a> from startup_swm211.o(RESET) referenced from startup_swm211.o(RESET)
 <LI><a href="#[c]">HALL_Handler</a> from startup_swm211.o(RESET) referenced from startup_swm211.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_swm211.o(RESET) referenced from startup_swm211.o(RESET)
 <LI><a href="#[11]">I2C0_Handler</a> from startup_swm211.o(RESET) referenced from startup_swm211.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_swm211.o(RESET) referenced from startup_swm211.o(RESET)
 <LI><a href="#[d]">PWM0_Handler</a> from interrupt.o(PlaceInRAM) referenced from startup_swm211.o(RESET)
 <LI><a href="#[a]">PWM1_Handler</a> from startup_swm211.o(RESET) referenced from startup_swm211.o(RESET)
 <LI><a href="#[f]">PWMBRK_Handler</a> from startup_swm211.o(RESET) referenced from startup_swm211.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_swm211.o(RESET) referenced from startup_swm211.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_swm211.o(RESET) referenced from startup_swm211.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_swm211.o(RESET) referenced from startup_swm211.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from interrupt.o(i.SysTick_Handler) referenced from startup_swm211.o(RESET)
 <LI><a href="#[7]">TIMR0_Handler</a> from interrupt.o(i.TIMR0_Handler) referenced from startup_swm211.o(RESET)
 <LI><a href="#[b]">TIMR1_Handler</a> from interrupt.o(i.TIMR1_Handler) referenced from startup_swm211.o(RESET)
 <LI><a href="#[6]">UART0_Handler</a> from startup_swm211.o(RESET) referenced from startup_swm211.o(RESET)
 <LI><a href="#[9]">UART1_Handler</a> from startup_swm211.o(RESET) referenced from startup_swm211.o(RESET)
 <LI><a href="#[10]">WDT_Handler</a> from startup_swm211.o(RESET) referenced from startup_swm211.o(RESET)
 <LI><a href="#[12]">XTALSTOP_Handler</a> from startup_swm211.o(RESET) referenced from startup_swm211.o(RESET)
 <LI><a href="#[25]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_swm211.o(RESET)
 <LI><a href="#[26]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, startup_swm211.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>__Vectors_End</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_swm211.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm211.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm211.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm211.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm211.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>UART0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm211.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>CORDIC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm211.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CORDIC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CORDIC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>UART1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm211.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PWM1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm211.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>HALL_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm211.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HALL_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HALL_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>PWMBRK_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm211.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMBRK_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMBRK_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>WDT_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm211.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>I2C0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm211.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>XTALSTOP_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm211.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XTALSTOP_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XTALSTOP_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>BTIMR0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm211.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMR0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMR0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>BTIMR1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm211.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMR1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMR1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>BTIMR3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm211.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMR3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIMR3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>GPIOA_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm211.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>GPIOB_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm211.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>GPIOM_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm211.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOM_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOM_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>GPIOA0_GPIOM0_SPI1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm211.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA0_GPIOM0_SPI1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA0_GPIOM0_SPI1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>GPIOA1_GPIOM1_MPU_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm211.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA1_GPIOM1_MPU_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA1_GPIOM1_MPU_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>GPIOA2_GPIOM2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm211.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA2_GPIOM2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA2_GPIOM2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>GPIOA3_GPIOM3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm211.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA3_GPIOM3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA3_GPIOM3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>GPIOB0_GPIOA8_TIMR2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm211.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB0_GPIOA8_TIMR2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB0_GPIOA8_TIMR2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>GPIOB1_GPIOA9_DMA_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm211.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB1_GPIOA9_DMA_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB1_GPIOA9_DMA_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>GPIOB2_GPIOA10_CAN0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm211.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB2_GPIOA10_CAN0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB2_GPIOA10_CAN0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>GPIOB3_GPIOA11_SPI0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm211.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB3_GPIOA11_SPI0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB3_GPIOA11_SPI0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>GPIOB4_GPIOB10_QEI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm211.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB4_GPIOB10_QEI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB4_GPIOB10_QEI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[28]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[34]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[82]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[83]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[84]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[85]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[86]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[87]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[49]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardwareInit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_svm_gen (via Veneer)
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[2b]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_if_init
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[88]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2a]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[8a]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[8b]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[2d]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_loop
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>

<P><STRONG><a name="[30]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[31]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_loop
</UL>

<P><STRONG><a name="[73]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_loop
</UL>

<P><STRONG><a name="[32]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_loop
</UL>

<P><STRONG><a name="[33]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_pwm_jump_to_target
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_loop
</UL>

<P><STRONG><a name="[74]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_pwm_update
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_loop
</UL>

<P><STRONG><a name="[8c]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cfcmple.o(.text), UNUSED)

<P><STRONG><a name="[75]"></a>__aeabi_cfcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_loop
</UL>

<P><STRONG><a name="[76]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_loop
</UL>

<P><STRONG><a name="[8d]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[2e]"></a>_float_epilogue</STRONG> (Thumb, 116 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[29]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[8e]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[8f]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[90]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[14]"></a>ACMP_Handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, interrupt.o(i.ACMP_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>ADC_Close</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, swm2x1_adc.o(i.ADC_Close))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[35]"></a>ADC_Init</STRONG> (Thumb, 562 bytes, Stack size 20 bytes, swm2x1_adc.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ADC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Close
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ADC
</UL>

<P><STRONG><a name="[37]"></a>ADC_IsEOC</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, swm2x1_adc.o(i.ADC_IsEOC))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_IsEOC
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chn2idx
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_if_measure_ibus_offset
</UL>

<P><STRONG><a name="[4a]"></a>ADC_Open</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, swm2x1_adc.o(i.ADC_Open))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ADC
</UL>

<P><STRONG><a name="[69]"></a>ADC_Start</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, swm2x1_adc.o(i.ADC_Start))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_if_measure_ibus_offset
</UL>

<P><STRONG><a name="[e]"></a>BOD_Handler</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, interrupt.o(i.BOD_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>BTIMR2_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, interrupt.o(i.BTIMR2_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>CORDIC_Init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, swm2x1_cordic.o(i.CORDIC_Init))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardwareInit
</UL>

<P><STRONG><a name="[43]"></a>DIV_Init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, swm2x1_div.o(i.DIV_Init))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardwareInit
</UL>

<P><STRONG><a name="[3b]"></a>FLASH_Erase</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, swm211_flash.o(i.FLASH_Erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_Erase
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ReadDate
</UL>

<P><STRONG><a name="[3c]"></a>FLASH_Write</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, swm211_flash.o(i.FLASH_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ReadDate
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOff_Save
</UL>

<P><STRONG><a name="[3a]"></a>Flash_Find_Offset</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, flash.o(i.Flash_Find_Offset))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Flash_Find_Offset
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ReadDate
</UL>

<P><STRONG><a name="[60]"></a>Flash_Param_at_xMHz</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, swm211_flash.o(i.Flash_Param_at_xMHz))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Flash_Param_at_xMHz
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[39]"></a>Flash_ReadDate</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, flash.o(i.Flash_ReadDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Flash_ReadDate &rArr; FLASH_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Write
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Erase
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Find_Offset
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOn_Read
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOff_Save
</UL>

<P><STRONG><a name="[4b]"></a>GPIO_ClrBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, swm2x1_gpio.o(i.GPIO_ClrBit))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_GPIO
</UL>

<P><STRONG><a name="[3d]"></a>GPIO_Init</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, swm2x1_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = GPIO_Init &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_gpio_init
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_GPIO
</UL>

<P><STRONG><a name="[3f]"></a>HardwareInit</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, main.o(i.HardwareInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = HardwareInit &rArr; Init_GPIO &rArr; GPIO_Init &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Uart
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Timer
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PWM_Drive
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_OPA
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_GPIO
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CMP
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ADC
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIV_Init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CORDIC_Init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[45]"></a>Init_ADC</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, adc.o(i.Init_ADC))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Init_ADC &rArr; ADC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Open
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardwareInit
</UL>

<P><STRONG><a name="[77]"></a>Init_BOD</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, main.o(i.Init_BOD))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[40]"></a>Init_CMP</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, cmp.o(i.Init_CMP))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Init_CMP &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardwareInit
</UL>

<P><STRONG><a name="[42]"></a>Init_GPIO</STRONG> (Thumb, 244 bytes, Stack size 32 bytes, gpio.o(i.Init_GPIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Init_GPIO &rArr; GPIO_Init &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClrBit
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardwareInit
</UL>

<P><STRONG><a name="[47]"></a>Init_OPA</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, opa.o(i.Init_OPA))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Init_OPA &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardwareInit
</UL>

<P><STRONG><a name="[41]"></a>Init_PWM_Drive</STRONG> (Thumb, 146 bytes, Stack size 56 bytes, pwm_drive.o(i.Init_PWM_Drive))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Init_PWM_Drive &rArr; PORT_SixDrive_Enable &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Start
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_SixDrive_Enable
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_CmpTrigger
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardwareInit
</UL>

<P><STRONG><a name="[46]"></a>Init_Timer</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, timer.o(i.Init_Timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Init_Timer &rArr; TIMR_Init &rArr; TIMR_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardwareInit
</UL>

<P><STRONG><a name="[48]"></a>Init_Uart</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uart.o(i.Init_Uart))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardwareInit
</UL>

<P><STRONG><a name="[7a]"></a>PLLInit</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, system_swm211.o(i.PLLInit))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchToPLL
</UL>

<P><STRONG><a name="[3e]"></a>PORT_Init</STRONG> (Thumb, 84 bytes, Stack size 12 bytes, swm2x1_port.o(i.PORT_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Timer
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_OPA
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_GPIO
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CMP
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ADC
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_SixDrive_Enable
</UL>

<P><STRONG><a name="[4f]"></a>PORT_SixDrive_Enable</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, pwm_drive.o(i.PORT_SixDrive_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PORT_SixDrive_Enable &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PWM_Drive
</UL>

<P><STRONG><a name="[4e]"></a>PWM_CmpTrigger</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, swm2x1_pwm.o(i.PWM_CmpTrigger))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PWM_CmpTrigger
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PWM_Drive
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_init
</UL>

<P><STRONG><a name="[4c]"></a>PWM_Init</STRONG> (Thumb, 352 bytes, Stack size 4 bytes, swm2x1_pwm.o(i.PWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = PWM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PWM_Drive
</UL>

<P><STRONG><a name="[7b]"></a>PWM_IntClr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, swm2x1_pwm.o(i.PWM_IntClr))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM0_Handler (via Veneer)
</UL>

<P><STRONG><a name="[4d]"></a>PWM_Start</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm2x1_pwm.o(i.PWM_Start))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PWM_Drive
</UL>

<P><STRONG><a name="[51]"></a>PowerOff_Save</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, flash.o(i.PowerOff_Save))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = PowerOff_Save &rArr; Flash_ReadDate &rArr; FLASH_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Write
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ReadDate
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[52]"></a>PowerOn_Read</STRONG> (Thumb, 306 bytes, Stack size 24 bytes, flash.o(i.PowerOn_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = PowerOn_Read &rArr; light_wall_switch &rArr; light_loop &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rgb_onoff_set
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_wall_switch
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_step_change
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_pwm_update
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_pwm_jump_to_target
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_loop
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ReadDate
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[59]"></a>SoftwareInit</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, main.o(i.SoftwareInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SoftwareInit &rArr; debug_gpio_init &rArr; GPIO_Init &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_if_init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, interrupt.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = SysTick_Handler &rArr; foc_if_loop &rArr; foc_init &rArr; foc_svm_gen &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_if_loop
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_1ms_task
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, system_swm211.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemCoreClockUpdate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[5f]"></a>SystemInit</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, system_swm211.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SystemInit &rArr; SystemCoreClockUpdate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchToPLL
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Param_at_xMHz
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7]"></a>TIMR0_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, interrupt.o(i.TIMR0_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>TIMR1_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, interrupt.o(i.TIMR1_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMR1_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_INTClr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>TIMR_INTClr</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, swm2x1_timr.o(i.TIMR_INTClr))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR1_Handler
</UL>

<P><STRONG><a name="[50]"></a>TIMR_Init</STRONG> (Thumb, 272 bytes, Stack size 36 bytes, swm2x1_timr.o(i.TIMR_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = TIMR_Init &rArr; TIMR_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Timer
</UL>

<P><STRONG><a name="[71]"></a>TIMR_OC_Init</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, swm2x1_timr.o(i.TIMR_OC_Init))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_pwm_update
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_breath_loop
</UL>

<P><STRONG><a name="[72]"></a>TIMR_Start</STRONG> (Thumb, 120 bytes, Stack size 12 bytes, swm2x1_timr.o(i.TIMR_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIMR_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_pwm_update
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_breath_loop
</UL>

<P><STRONG><a name="[63]"></a>TIMR_Stop</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, swm2x1_timr.o(i.TIMR_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMR_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_pwm_update
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_Init
</UL>

<P><STRONG><a name="[91]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[92]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[93]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[6f]"></a>anti_integral_windup_pi_controller</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, picontroller.o(i.anti_integral_windup_pi_controller))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = anti_integral_windup_pi_controller
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_speed_ramp
</UL>

<P><STRONG><a name="[5a]"></a>debug_gpio_init</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, util.o(i.debug_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = debug_gpio_init &rArr; GPIO_Init &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInit
</UL>

<P><STRONG><a name="[6b]"></a>foc_cur_ramp</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, foc_interface.o(i.foc_cur_ramp))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = foc_cur_ramp
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_if_run
</UL>

<P><STRONG><a name="[6c]"></a>foc_cur_set</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, foc.o(i.foc_cur_set))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_if_run
</UL>

<P><STRONG><a name="[65]"></a>foc_if_charge</STRONG> (Thumb, 150 bytes, Stack size 4 bytes, foc_interface.o(i.foc_if_charge))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = foc_if_charge
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_if_loop
</UL>

<P><STRONG><a name="[5b]"></a>foc_if_init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, foc_interface.o(i.foc_if_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = foc_if_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInit
</UL>

<P><STRONG><a name="[5c]"></a>foc_if_loop</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, foc_interface.o(i.foc_if_loop))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = foc_if_loop &rArr; foc_init &rArr; foc_svm_gen &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_make_dir
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_if_run
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_if_measure_ibus_offset
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_if_charge
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[64]"></a>foc_if_measure_ibus_offset</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, foc_interface.o(i.foc_if_measure_ibus_offset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = foc_if_measure_ibus_offset &rArr; ADC_IsEOC
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Start
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IsEOC
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_if_loop
</UL>

<P><STRONG><a name="[67]"></a>foc_if_run</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, foc_interface.o(i.foc_if_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = foc_if_run &rArr; foc_speed_ramp &rArr; anti_integral_windup_pi_controller
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_speed_ramp
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_cur_ramp
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_cur_set
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_if_loop
</UL>

<P><STRONG><a name="[66]"></a>foc_init</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, foc.o(i.foc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = foc_init &rArr; foc_svm_gen &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_CmpTrigger
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_svm_gen (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_if_loop
</UL>

<P><STRONG><a name="[68]"></a>foc_make_dir</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, foc_interface.o(i.foc_make_dir))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_if_loop
</UL>

<P><STRONG><a name="[6a]"></a>foc_speed_ramp</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, foc_interface.o(i.foc_speed_ramp))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = foc_speed_ramp &rArr; anti_integral_windup_pi_controller
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anti_integral_windup_pi_controller
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPFFunction (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_if_run
</UL>

<P><STRONG><a name="[70]"></a>light_breath_loop</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, main_light.o(i.light_breath_loop))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = light_breath_loop &rArr; TIMR_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_Start
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_OC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_loop
</UL>

<P><STRONG><a name="[53]"></a>light_loop</STRONG> (Thumb, 392 bytes, Stack size 32 bytes, main_light.o(i.light_loop))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = light_loop &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_pwm_update
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_breath_loop
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_wall_switch
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOn_Read
</UL>

<P><STRONG><a name="[54]"></a>light_pwm_jump_to_target</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, main_light.o(i.light_pwm_jump_to_target))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = light_pwm_jump_to_target &rArr; __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_wall_switch
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOn_Read
</UL>

<P><STRONG><a name="[55]"></a>light_pwm_update</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, main_light.o(i.light_pwm_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = light_pwm_update &rArr; TIMR_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_Stop
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_Start
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_OC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_wall_switch
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_loop
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOn_Read
</UL>

<P><STRONG><a name="[56]"></a>light_step_change</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, main_light.o(i.light_step_change))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = light_step_change
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_wall_switch
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOn_Read
</UL>

<P><STRONG><a name="[57]"></a>light_wall_switch</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, main_light.o(i.light_wall_switch))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = light_wall_switch &rArr; light_loop &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_step_change
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_pwm_update
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_pwm_jump_to_target
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_loop
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOn_Read
</UL>

<P><STRONG><a name="[26]"></a>main</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = main &rArr; PowerOn_Read &rArr; light_wall_switch &rArr; light_loop &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOn_Read
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOff_Save
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInit
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BOD
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardwareInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[58]"></a>rgb_onoff_set</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, rgb.o(i.rgb_onoff_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rgb_onoff_set
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;software_pwm_update
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOn_Read
</UL>

<P><STRONG><a name="[78]"></a>software_pwm_update</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, software_pwm.o(i.software_pwm_update))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rgb_onoff_set
</UL>

<P><STRONG><a name="[79]"></a>switchTo12MHz</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, system_swm211.o(i.switchTo12MHz))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchToPLL
</UL>

<P><STRONG><a name="[61]"></a>switchToPLL</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, system_swm211.o(i.switchToPLL))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = switchToPLL
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchTo12MHz
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLLInit
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[5d]"></a>user_1ms_task</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(i.user_1ms_task))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[d]"></a>PWM0_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, interrupt.o(PlaceInRAM))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PWM0_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_IntClr (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>ADC0_Handler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, interrupt.o(PlaceInRAM))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = ADC0_Handler &rArr; foc_loop_isr &rArr; foc_svm_gen &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_loop_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm211.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>foc_svm_gen</STRONG> (Thumb, 598 bytes, Stack size 56 bytes, foc.o(PlaceInRAM))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = foc_svm_gen &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_loop_isr
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_init (via Veneer)
</UL>

<P><STRONG><a name="[80]"></a>Udq_2_Uab</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, foc.o(PlaceInRAM))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Udq_2_Uab
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_loop_isr
</UL>

<P><STRONG><a name="[7e]"></a>alpha_beta_2_dq</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, foc.o(PlaceInRAM))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = alpha_beta_2_dq
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_loop_isr
</UL>

<P><STRONG><a name="[7c]"></a>foc_loop_isr</STRONG> (Thumb, 610 bytes, Stack size 32 bytes, foc.o(PlaceInRAM))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = foc_loop_isr &rArr; foc_svm_gen &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pll
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pi_controller
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPFFunction
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alpha_beta_2_dq
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Udq_2_Uab
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_svm_gen
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_Handler
</UL>

<P><STRONG><a name="[94]"></a>foc_observer_update</STRONG> (Thumb, 214 bytes, Stack size 36 bytes, foc.o(PlaceInRAM), UNUSED)

<P><STRONG><a name="[7f]"></a>pi_controller</STRONG> (Thumb, 120 bytes, Stack size 12 bytes, picontroller.o(PlaceInRAM))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = pi_controller
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_loop_isr
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pll
</UL>

<P><STRONG><a name="[7d]"></a>pll</STRONG> (Thumb, 256 bytes, Stack size 40 bytes, pll.o(PlaceInRAM))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pll &rArr; pi_controller
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pi_controller
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_loop_isr
</UL>

<P><STRONG><a name="[6e]"></a>LPFFunction</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, foc_util.o(PlaceInRAM))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_loop_isr
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;foc_speed_ramp (via Veneer)
</UL>

<P><STRONG><a name="[95]"></a>HPFFunction</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, foc_util.o(PlaceInRAM), UNUSED)

<P><STRONG><a name="[96]"></a>theta_to_sin</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, foc_util.o(PlaceInRAM), UNUSED)

<P><STRONG><a name="[97]"></a>theta_to_sin_and_cos</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, foc_util.o(PlaceInRAM), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[38]"></a>chn2idx</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, swm2x1_adc.o(i.chn2idx))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IsEOC
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
